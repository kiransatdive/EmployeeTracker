{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HomeComponent = class HomeComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.empData = [];\n    this.isClickRadio = false;\n  }\n  ngOnInit() {\n    this.getDataFromBackend();\n  }\n  getDataFromBackend() {\n    this.service.getAllEmployee().subscribe(response => {\n      console.log(response);\n      this.empData = response;\n    });\n  }\n  onEdit(id) {\n    this.isClickRadio = true;\n    this.id = id;\n  }\n  onUpdate() {\n    if (this.isClickRadio) {\n      //update logic\n      this.router.navigate(['/updateemp', this.id]);\n    } else {\n      alert(\"Please Select a Record to be Update...!!!\");\n    }\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);","map":{"version":3,"names":["Component","HomeComponent","constructor","service","router","empData","isClickRadio","ngOnInit","getDataFromBackend","getAllEmployee","subscribe","response","console","log","onEdit","id","onUpdate","navigate","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Fronted\\hello-world\\EmployeeTracker\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  empData:any[]=[];\n  isClickRadio:boolean=false;\n  id!:any;\n\n  constructor(private service:HttpService,\n              private router:Router){}\n\n  ngOnInit(): void {\n    this.getDataFromBackend();\n  }\n\n  getDataFromBackend(){\n    this.service.getAllEmployee()\n    .subscribe((response:any)=>{\n      console.log(response);\n      this.empData=response;\n    })\n  }\n\n  onEdit(id:any){\n    this.isClickRadio=true;\n    this.id=id;\n  }\n\n  onUpdate(){\n    if(this.isClickRadio){\n      //update logic\n      this.router.navigate(['/updateemp',this.id]);\n    }else{\n      alert(\"Please Select a Record to be Update...!!!\");\n    }\n  }\n\n}\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YAAoBC,OAAmB,EACnBC,MAAa;IADb,KAAAD,OAAO,GAAPA,OAAO;IACP,KAAAC,MAAM,GAANA,MAAM;IAL1B,KAAAC,OAAO,GAAO,EAAE;IAChB,KAAAC,YAAY,GAAS,KAAK;EAIS;EAEnCC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkBA,CAAA;IAChB,IAAI,CAACL,OAAO,CAACM,cAAc,EAAE,CAC5BC,SAAS,CAAEC,QAAY,IAAG;MACzBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACN,OAAO,GAACM,QAAQ;IACvB,CAAC,CAAC;EACJ;EAEAG,MAAMA,CAACC,EAAM;IACX,IAAI,CAACT,YAAY,GAAC,IAAI;IACtB,IAAI,CAACS,EAAE,GAACA,EAAE;EACZ;EAEAC,QAAQA,CAAA;IACN,IAAG,IAAI,CAACV,YAAY,EAAC;MACnB;MACA,IAAI,CAACF,MAAM,CAACa,QAAQ,CAAC,CAAC,YAAY,EAAC,IAAI,CAACF,EAAE,CAAC,CAAC;KAC7C,MAAI;MACHG,KAAK,CAAC,2CAA2C,CAAC;;EAEtD;CAED;AAnCYjB,aAAa,GAAAkB,UAAA,EALzBnB,SAAS,CAAC;EACToB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWrB,aAAa,CAmCzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}